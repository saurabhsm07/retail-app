Learnings:
Model-View-Template / Model-View-Controller (MVC) - the aim is to keep the layers separate, and to have each layer depend only on the one below it.
                                                        i:e PRESENTATION LAYER -> BUSINESS LOGIC -> DATABASE
Onion Architecture - our model as the core and dependencies flowing inward to it;
                         i:e PRESENTATION LAYER -> BUSINESS LOGIC (Domain Model)<- DATABASE

In the normal ORM approach Model inherits from the ORM classes be it SQLAlchemy (declarative pattern) or Django we want the ORM to be dependent on our Domain Model

auto-increment primary keys are excluded from domain model objects (id columns from batch and order_line classes) - I don't clearly understand why
They are defined in the ORM as autoincrement primary key columns.

_allocations which is an array of order line objects is not part of batches ORM definition, instead we define a separate table for this

updated OrderLine dataclass with parameter unsafe_hash=True, so that __hash__ and equality methods work